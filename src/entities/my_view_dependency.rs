//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "my_view_dependency")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub view_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub dependent_object_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::my_object::Entity",
        from = "Column::DependentObjectId",
        to = "super::my_object::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    MyObject,
    #[sea_orm(
        belongs_to = "super::my_view::Entity",
        from = "Column::ViewId",
        to = "super::my_view::Column::ObjectId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    MyView,
}

impl Related<super::my_object::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MyObject.def()
    }
}

impl Related<super::my_view::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MyView.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
